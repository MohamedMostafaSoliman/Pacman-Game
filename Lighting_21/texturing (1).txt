** Renderer.h

#include <memory>

GLuint Tex1_id;
std::unique_ptr<Texture> mTexture;

** Renderer.cpp

* Initialize
glGenTextures(1, &Tex1_id);
glBindTexture(GL_TEXTURE_2D, Tex1_id);
mTexture = std::unique_ptr<Texture>(new Texture("B.jpeg", 0));

* Draw
mTexture->Bind();
glUniformMatrix4fv(mvpMatrixID, 1, GL_FALSE, &MVP_matrix[0][0]);

** VertexShader

#version 330 core

layout(location = 0) in vec3 vertexPosition_modelspace; 
layout(location = 1) in vec2 texCoord;
out vec2 UV;
uniform mat4 mvp;

void main()
{

	gl_Position =  mvp * vec4(vertexPosition_modelspace,1); 
	UV = texCoord;
}

** FragmentShader

#version 330 core


// Ouput data
in vec2 UV;
out vec3 color;
uniform sampler2D myTextureSampler;

void main()
{
	color = texture( myTextureSampler, UV ).rgb;
}
